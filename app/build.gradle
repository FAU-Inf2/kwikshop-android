apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    sourceSets {
        main.java.srcDirs += 'src/common/src/main/java'
    }

    defaultConfig {
        applicationId "de.fau.cs.mad.kwikshop.android"
        //minSdkVersion 14
        //targetSdkVersion 21
       // multiDexEnabled true
        versionCode 2
        versionName "1.0.1"
        resValue "string", "BuildInfo_Git_Branch", getGitBranchName()
        resValue "string", "BuildInfo_Git_Commit", getGitCommitId()
    }

    signingConfigs {
        release {
            storeFile file("unknown")
            storePassword "unknown"
            keyAlias "unknown"
            keyPassword "unknown"
        }
    }

    productFlavors {
        // Define separate dev and prod product flavors.
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 14
        }
    }


    buildTypes {
        release {
            multiDexEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/eclipse.inf'
        exclude 'license.html'
        exclude 'readme.html'
        exclude 'META-INF/services/org.glassfish.jersey.internal.spi.ForcedAutoDiscoverable'
    }
}


preBuild.dependsOn(":kwikshop-common:build")

dependencies {

    //IMPORTANT: If you add dependencies here, you also need to mention
    // the dependency in README.md. If you want it to show up in the application's about screen
    // you also need to add it to the string array acknowledgements_Items in values/strings.xml

    compile fileTree(include: ['*.jar'], dir: 'libs')
    //compile fileTree(dir: '../../kwikshop-common/build/classes', include: '*.class')
    //compile project(':kwikshop-common')
    compile files('../../kwikshop-common/build/libs/kwikshop-common-1.0.jar')

    //Google support libaries for older android version
    compile 'com.android.support:appcompat-v7:21.0.+'

    compile 'com.android.support:multidex:1.0.0'

    //orm-lite (Object mapper)
    compile 'com.j256.ormlite:ormlite-android:4.48'

    //Floating action button common in material design applications
    compile 'com.melnykov:floatingactionbutton:1.3.0'

    //event bus for publish-subscribe messaging
    compile 'de.greenrobot:eventbus:2.4.0'

    //Animations, drag and drop, swiping for ListView
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'
    compile 'com.nhaarman.listviewanimations:lib-manipulation:3.1.0@aar'
    compile 'com.nhaarman.listviewanimations:lib-core-slh:3.1.0@aar'

    //Dependency injection
    compile 'com.squareup.dagger:dagger:1.2.2'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.jakewharton:butterknife:6.1.0'

    //Google Play Services
    compile 'com.google.android.gms:play-services-location:7.5.0'
    compile 'com.google.android.gms:play-services-maps:7.5.0'

    //Google Places API
    compile 'se.walkercrou:google-places-api-java:2.1.2'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'

    //Google Maps Utils
    compile 'com.google.maps.android:android-maps-utils:0.3+'

    //Google Play Services for Login
    compile 'com.google.android.gms:play-services-base:7.5.0'
    compile 'com.google.android.gms:play-services-plus:7.5.0'

    //REST
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile ('org.glassfish.jersey.core:jersey-client:2.17') {
        exclude module: 'javax.inject'
    }
    compile ('org.glassfish.jersey.ext:jersey-proxy-client:2.17') {
        exclude module: 'javax.inject'
    }
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.5.1'
    compile 'javax.inject:javax.inject:1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.1'
    compile 'com.wordnik:swagger-annotations:1.5.0-M2'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('keystore.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}
